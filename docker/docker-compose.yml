version: '3.6'
services:
  # Contenedores para BD Postgres
  postgres:
    image: postgres:latest
    #restart: always
    ports:
      - '5432:5432'
    volumes:
      - './postgres-volume:/var/lib/postgresql/data'
      - './csv:/csv'
      - ./init-postgre.sql:/docker-entrypoint-initdb.d/docker_postgres_init.sql
    environment:
      - DATABASE_HOST=127.0.0.1
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
  pgadmin:
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - '80:80'
    volumes:
      - './pgadmin-volume:/var/lib/pgadmin'
    depends_on:
      - postgres
  # Contenedores para BD MongoDB
  mongodb:
    image: mongo:5.0
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root
    volumes:
      - ./init-mongo-1.sh:/docker-entrypoint-initdb.d/init-mongo-1.sh # Crea la DB 
      - './init-mongo-2.js:/docker-entrypoint-initdb.d/init-mongo-2.js:ro' # Genera los indices
      - './mongo-volume:/data/db'
      - './csv:/csv'
    ports:
      - '27017:27017'
  elasticsearch:
    image: elasticsearch:7.16.2
    container_name: elasticsearch
    #restart: always
    volumes:
      - ./elastic-volume:/usr/share/elasticsearch/data/
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      discovery.type: single-node
    ports:
      - '9200:9200'
      - '9300:9300'
    networks:
      - elk

  Logstash:
    image: logstash:7.16.2
    container_name: logstash
    #restart: always
    volumes:
      - ./logstash-volume/:/logstash_dir
      - './csv:/csv'
    command: logstash -f /logstash_dir/logstash.conf
    depends_on:
      - elasticsearch
    ports:
      - '9600:9600'
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - elk

  Kibana:
    image: kibana:7.16.2
    container_name: kibana
    #restart: always
    ports:
      - '5601:5601'
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    networks:
      - elk
volumes:
  elastic_data: { }

networks:
  elk:

# #  app:
# #    depends_on:
# #      - postgres3306