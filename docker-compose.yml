version: '3.8'
services:
  postgres:
    image: postgres:latest
    restart: always
    ports:
      - '5432:5432'
    volumes:
      - './postgres-volume:/var/lib/postgresql/data'
      - './csv:/csv'
      - ./init-postgre.sql:/docker-entrypoint-initdb.d/docker_postgres_init.sql
    environment:
      - DATABASE_HOST=127.0.0.1
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
  pgadmin:
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - '80:80'
    volumes:
      - './pgadmin:/var/lib/pgadmin'
    depends_on:
      - postgres
  mongodb:
    image: mongo:5.0
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root
    volumes:
      - ./init-mongo-1.sh:/docker-entrypoint-initdb.d/init-mongo-1.sh
      - ./init-mongo-2.js:/docker-entrypoint-initdb.d/init-mongo-2.js:ro
      - ./mongo-volume:/data/db
      - './csv:/csv'
    ports:
      - '27017:27017'
#  elasticsearch:
#    container_name: elastic-container
#    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.4
#    environment:
#      - xpack.security.enabled=false
#      - "discovery.type=single-node"
#    networks:
#      - ek-net
#    ports:
#      - 9200:9200
#    volumes:
#      - elastic-volume:/usr/share/elasticsearch/data
#  kibana:
#    container_name: kibana-container
#    image: docker.elastic.co/kibana/kibana:7.13.4
#    environment:
#      - ELASTICSEARCH_HOSTS=http://elastic-container:9200
#    networks:
#      - ek-net
#    depends_on:
#      - elasticsearch
#    ports:
#      - 5601:5601

#volumes:
#  elastic-volume:
#    driver: local

#networks:
#  ek-net:
#    driver: bridge

#  app:
#    depends_on:
#      - postgres3306